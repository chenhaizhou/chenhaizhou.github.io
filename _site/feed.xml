<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haizhou Chen</title>
    <description></description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 25 Nov 2014 09:58:39 +0000</pubDate>
    <lastBuildDate>Tue, 25 Nov 2014 09:58:39 +0000</lastBuildDate>
    <generator>Jekyll v2.5.2</generator>
    
      <item>
        <title>bbbbbbbbbbb!</title>
        <description>&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Nov 2014 09:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/26/test1.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/26/test1.html</guid>
        
        <category>test</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.
&lt;!--more--&gt;
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 17:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>aaaaaaaaaaa!</title>
        <description>&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 17:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%204.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%204.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>aaaaaaaaaaa!</title>
        <description>&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 17:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%203.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%203.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>aaaaaaaaaaa!</title>
        <description>&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 17:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%202.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy%202.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>aaaaaaaaaaa!</title>
        <description>&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaa&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 17:48:25 +0000</pubDate>
        <link>http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2014/11/24/test1%20copy.html</guid>
        
        <category>test</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Redis HA 方案选型</title>
        <description>&lt;p&gt;本文整理了redis当前的高可用方案，以及比较各方案的优劣和我们最后的选型。&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;## Redis-Cluster
* 引入Hash slots概念,便于分片以及数据迁移.解决了按照节点分片带来的扩容以及数据迁移的困难&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`slot = crc16(&quot;foo&quot;) mod NUMERSLOTS
` * 节点都是对等的,复制是基于slots的,不是基于节点的.每个slots有两份冗余,可以容忍随机的两台节点宕机而不影响服务 * 支持自动重新分片以及故障迁移 * 节点通过PING-PONG以及Gossip互相感知,不需要中心监控服务监控节点的状态 * 通过SmartClient在Client端缓存了slots的分布图,无需中心代理.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详情参看&lt;a href=&quot;http://redis.io/presentation/Redis_Cluster.pdf&quot; title=&quot;Redis_Cluster&quot;&gt; Redis_Cluster.pdf &lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;优点
    &lt;ul&gt;
      &lt;li&gt;优点很多 能确保高可用 高性能,基本上是分布式缓存的完美方案&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点:
    &lt;ul&gt;
      &lt;li&gt;还是beta版本,不能在生产环境使用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;haproxy--twemproxy--redis-twemproxy-agentnodejs--redis-sentinel&quot;&gt;HAProxy + Twemproxy + redis-twemproxy-agent(NodeJS) + redis sentinel&lt;/h2&gt;

&lt;p&gt;方案来源(&lt;a href=&quot;http://www.jambr.co.uk/Article/redis-twemproxy-agent&quot; title=&quot;redis-twemproxy-agent&quot;&gt;REDIS-SENTINEL TWEMPROXY AGENT&lt;/a&gt;)
&lt;img src=&quot;http://jambr.blob.core.windows.net/articleimages/redis-sentinel.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twemproxy 是twitter开源的代理服务,支持Memcached和Redis协议,在这里主要的作用是 1.解决分片的问题,这样就不需要客户端自己做分片,分片对客户端是透明的.2.客户端应用连接Twemproxy,主从切换对客户端透明&lt;/li&gt;
  &lt;li&gt;Redis sentinel 是redis官方提供的redis检测工具,会检测redis的状态然后触发事件.&lt;/li&gt;
  &lt;li&gt;Redis-Twemproxy-Agent主要是用于监听redis sentinel的变更事件,修改Twemproxy的配置.&lt;/li&gt;
  &lt;li&gt;HAProxy 主要是为了解决Twemproxy的高可用问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;优点
    &lt;ul&gt;
      &lt;li&gt;解决了分片问题&lt;/li&gt;
      &lt;li&gt;能保证高可用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点
    &lt;ul&gt;
      &lt;li&gt;Twemproxy的hash规则和我们当前使用的方式不兼容,改造后会有数据迁移的问题,比较麻烦&lt;/li&gt;
      &lt;li&gt;这个方案引入的组件过多,担心不好运维&lt;/li&gt;
      &lt;li&gt;不支持读写分离Slave节点只起备份的作用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;keepalived--haproxy--redis-sentinel--&quot;&gt;Keepalived + HAProxy + Redis sentinel + 自定义脚本&lt;/h2&gt;

&lt;p&gt;这个方案基本上是上个版本的简化版本
&lt;img src=&quot;http://jolestar.com/images/redis/redis-ha.jpg&quot; alt=&quot;redis-ha&quot; title=&quot;redis-ha&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keepalived负责虚拟ip和高可用&lt;/li&gt;
  &lt;li&gt;HAProxy 负责代理Redis的端口,同一个实例可以代理多个redis节点&lt;/li&gt;
  &lt;li&gt;Redis sentinel负责检测Redis的存活状况,并进行主从切换&lt;/li&gt;
  &lt;li&gt;自定义脚本由Keepalived的定时调用,通过命令向Redis sentinel查询Redis Master的ip,判断是否发生变化,如果变化则修改HAProxy配置文件并重启HAProxy.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;优点:
    &lt;ul&gt;
      &lt;li&gt;组件较少,并且都比较成熟,运维成本较低&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点:
    &lt;ul&gt;
      &lt;li&gt;redis的slave一直处于备用状态 比较浪费(同上一个方案)&lt;/li&gt;
      &lt;li&gt;没有解决分片问题,分片由应用解决&lt;/li&gt;
      &lt;li&gt;代理对性能有影响 &lt;/li&gt;
      &lt;li&gt;脚本是定时轮询的机制通过Redis sentinel查询redis状态,主从变更后感知会比较慢,如果发生切换,整体上服务会有分钟级别的时间处于不可用状态&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;zookeeper--redis-sentinel----smartclient&quot;&gt;Zookeeper + Redis sentinel + 自定义同步服务 + SmartClient&lt;/h2&gt;

&lt;p&gt;这个方案的思路和RedisCluster有一定的共通之处,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Redis sentinel 检测redis实例并进行主从切换&lt;/li&gt;
  &lt;li&gt;自定义同步服务负责监听Redis sentinel的状态变更,将redis实例的状态同步到Zookeeper&lt;/li&gt;
  &lt;li&gt;Zookeeper扮演配置中心角色&lt;/li&gt;
  &lt;li&gt;SmartClient连接到Zookeeper并且watch Redis 实例的状态,根据状态将请求发送到正确的redis节点&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;优点:
    &lt;ul&gt;
      &lt;li&gt;不需要代理 没有性能浪费&lt;/li&gt;
      &lt;li&gt;SmartClient机制是当前分布式缓存的一种通用解决方案&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点:
    &lt;ul&gt;
      &lt;li&gt;自定义同步服务以及SmartClient当前都需要额外开发 考虑到RedisCluster本身已经包含了这些改造,不如等待Cluster正式发布.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;结论&lt;/h2&gt;
&lt;p&gt;基于当前流量不是太大,数据分片也不是当前最大的的问题,主要的需求点在高可用,最后使用了方案二.上线后整体稳定,服务器重启,网络不通等故障,基本不用人工处理redis的问题&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
        <link>http://yourdomain.com/redis-ha/</link>
        <guid isPermaLink="true">http://yourdomain.com/redis-ha/</guid>
        
        <category>redis</category>
        
        <category>HA</category>
        
        
      </item>
    
  </channel>
</rss>
